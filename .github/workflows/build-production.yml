# This is a basic workflow to help you get started with Actions

name: Build and push the tagged build to production

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Fetch latest version
        id: fetch_version
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
        
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        uses: docker/login-action@v1.14.1
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push production images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        uses: docker/build-push-action@v2.10.0
        with:                 
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest,${{secrets.ACR_NAME}}/contoso-website:${{ steps.fetch_version.outputs.TAG }}
  
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image

    steps:
      - uses: actions/checkout@v2

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource group name
          resource-group: mslearn-gh-pipelines-27530
          # AKS cluster name
          cluster-name: contoso-video

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace production \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }} \
            --set image.tag=${GITHUB_REF##*/}
